package com.spring_security_project.auth.runner;

import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

import org.springframework.beans.factory.ObjectProvider;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.ApplicationArguments;
import org.springframework.boot.ApplicationRunner;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Component;

import com.spring_security_project.application_manager.model.CategoriaChef;
import com.spring_security_project.application_manager.model.CategoriaProdotto;
import com.spring_security_project.application_manager.model.Chef;
import com.spring_security_project.application_manager.model.Piatto;
import com.spring_security_project.application_manager.model.Ristorante;
import com.spring_security_project.application_manager.model.TipoCottura;
import com.spring_security_project.auth.service.BevandaService;
import com.spring_security_project.application_manager.service.ChefService;
import com.spring_security_project.application_manager.service.PiattoService;
import com.spring_security_project.application_manager.service.ProdottoService;
import com.spring_security_project.application_manager.service.RistoranteService;
import com.spring_security_project.auth.entity.ERole;
import com.spring_security_project.auth.entity.Role;
import com.spring_security_project.auth.entity.User;
import com.spring_security_project.auth.repository.RoleRepository;
import com.spring_security_project.auth.repository.UserRepository;
import com.spring_security_project.auth.service.AuthService;


@Component
public class AuthRunner implements ApplicationRunner {
	
	@Autowired RoleRepository roleRepository;
	@Autowired UserRepository userRepository;
	@Autowired PasswordEncoder passwordEncoder;
	@Autowired AuthService authService;
	@Autowired
	RistoranteService serviceRistorante;
	@Autowired
	ProdottoService serviceProdotto;
	@Autowired
	PiattoService servicePiatto;
	@Autowired
	BevandaService serviceBevanda;
	@Autowired
	ChefService serviceChef;

	@Autowired
	ObjectProvider<Ristorante> ristorante;
	@Autowired
	ObjectProvider<Chef> chef;
	@Autowired
	ObjectProvider<Piatto> piatto;
	
	private Set<Role> adminRole;
	private Set<Role> moderatorRole;
	private Set<Role> userRole;
	
	@Override
	public void run(ApplicationArguments args) throws Exception {
		System.out.println("Run...");
		if(roleRepository.findAll().size() == 0) {
			setRoleDefault();
		}
		
		if(userRepository.findAll().size() == 0) {
			User user = new User();
			user.setUsername("mario");
			user.setLastname("Rossi");
			user.setPassword(passwordEncoder.encode("qwerty"));
			user.setEmail("mario@example.com");
			user.setName("Mario");
			user.setCitta("Roma");
			Role admin = roleRepository.findById(1l).get();			
			user.getRoles().add(admin);
			userRepository.save(user);
		}
		
		creaDb();
		
	}
	
	private void setRoleDefault() {
		Role admin = new Role();
		admin.setRoleName(ERole.ROLE_ADMIN);
		roleRepository.save(admin);
		
		Role user = new Role();
		user.setRoleName(ERole.ROLE_USER);
		roleRepository.save(user);
		
		Role moderator = new Role();
		moderator.setRoleName(ERole.ROLE_MODERATOR);
		roleRepository.save(moderator);
		
		adminRole = new HashSet<Role>();
		adminRole.add(admin);
		adminRole.add(moderator);
		adminRole.add(user);
		
		moderatorRole = new HashSet<Role>();
		moderatorRole.add(moderator);
		moderatorRole.add(user);
		
		userRole = new HashSet<Role>();
		userRole.add(user);
	}
	
	public void creaDb() {
		if (serviceRistorante.cercaTutti().size() == 0 && serviceChef.cercaTutti().size() == 0
				&& serviceProdotto.cercaTutti().size() == 0) {
			serviceRistorante.salva(ristorante.getObject("Ristorante La Pergola", "Roma"));
			serviceRistorante.salva(ristorante.getObject("Ristorante Aroma", "Roma"));
			serviceRistorante.salva(ristorante.getObject("Ristorante Mirabelle", "Roma"));

			Ristorante r1 = serviceRistorante.cercaPerId(1l);
			Ristorante r2 = serviceRistorante.cercaPerId(2l);
			Ristorante r3 = serviceRistorante.cercaPerId(3l);

			serviceChef.salva(
					chef.getObject("Giancarlo Esposito", CategoriaChef.GENERALE, serviceRistorante.cercaPerId(1l)));
			serviceChef.salva(chef.getObject("Walter White", CategoriaChef.GENERALE, serviceRistorante.cercaPerId(2l)));
			serviceChef
					.salva(chef.getObject("Jesse Pinkman", CategoriaChef.GENERALE, serviceRistorante.cercaPerId(3l)));

			Chef c1 = serviceChef.cercaPerId(1l);
			Chef c2 = serviceChef.cercaPerId(2l);
			Chef c3 = serviceChef.cercaPerId(3l);

			r1.getListaChef().add(c1);
			serviceRistorante.modifica(r1);
			r2.getListaChef().add(c2);
			serviceRistorante.modifica(r2);
			r3.getListaChef().add(c3);
			serviceRistorante.modifica(r3);

			servicePiatto.salva(piatto.getObject("Carbonara", CategoriaProdotto.PRIMO, 18.00, c1, TipoCottura.COTTO));
			servicePiatto.salva(piatto.getObject("Amatriciana", CategoriaProdotto.PRIMO, 17.00, c1, TipoCottura.COTTO));
			servicePiatto.salva(piatto.getObject("Gricia", CategoriaProdotto.PRIMO, 17.00, c1, TipoCottura.COTTO));

			servicePiatto.salva(piatto.getObject("Carbonara", CategoriaProdotto.PRIMO, 18.00, c2, TipoCottura.COTTO));
			servicePiatto.salva(piatto.getObject("Amatriciana", CategoriaProdotto.PRIMO, 17.00, c2, TipoCottura.COTTO));
			servicePiatto.salva(piatto.getObject("Gricia", CategoriaProdotto.PRIMO, 17.00, c2, TipoCottura.COTTO));

			servicePiatto.salva(piatto.getObject("Carbonara", CategoriaProdotto.PRIMO, 18.00, c3, TipoCottura.COTTO));
			servicePiatto.salva(piatto.getObject("Amatriciana", CategoriaProdotto.PRIMO, 17.00, c3, TipoCottura.COTTO));
			servicePiatto.salva(piatto.getObject("Gricia", CategoriaProdotto.PRIMO, 17.00, c3, TipoCottura.COTTO));

			Piatto p1 = servicePiatto.cercaPerId(1l);
			Piatto p2 = servicePiatto.cercaPerId(2l);
			Piatto p3 = servicePiatto.cercaPerId(3l);
			Piatto p4 = servicePiatto.cercaPerId(4l);
			Piatto p5 = servicePiatto.cercaPerId(5l);
			Piatto p6 = servicePiatto.cercaPerId(6l);
			Piatto p7 = servicePiatto.cercaPerId(7l);
			Piatto p8 = servicePiatto.cercaPerId(8l);
			Piatto p9 = servicePiatto.cercaPerId(9l);

			c1.getListaProdotti().add(p1);
			c1.getListaProdotti().add(p2);
			c1.getListaProdotti().add(p3);
			serviceChef.modifica(c1);
			c2.getListaProdotti().add(p4);
			c2.getListaProdotti().add(p5);
			c2.getListaProdotti().add(p6);
			serviceChef.modifica(c2);
			c3.getListaProdotti().add(p7);
			c3.getListaProdotti().add(p8);
			c3.getListaProdotti().add(p9);
			serviceChef.modifica(c3);

			System.out.println("DB creato");
		}
	}

}
